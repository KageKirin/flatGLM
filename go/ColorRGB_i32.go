// automatically generated by the FlatBuffers compiler, do not modify

package flatmath

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

/// RGB color of int components
type ColorRGB_i32 struct {
	_tab flatbuffers.Struct
}

func (rcv *ColorRGB_i32) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *ColorRGB_i32) Table() flatbuffers.Table {
	return rcv._tab.Table
}

func (rcv *ColorRGB_i32) R() int32 {
	return rcv._tab.GetInt32(rcv._tab.Pos + flatbuffers.UOffsetT(0))
}
func (rcv *ColorRGB_i32) MutateR(n int32) bool {
	return rcv._tab.MutateInt32(rcv._tab.Pos+flatbuffers.UOffsetT(0), n)
}

func (rcv *ColorRGB_i32) G() int32 {
	return rcv._tab.GetInt32(rcv._tab.Pos + flatbuffers.UOffsetT(4))
}
func (rcv *ColorRGB_i32) MutateG(n int32) bool {
	return rcv._tab.MutateInt32(rcv._tab.Pos+flatbuffers.UOffsetT(4), n)
}

func (rcv *ColorRGB_i32) B() int32 {
	return rcv._tab.GetInt32(rcv._tab.Pos + flatbuffers.UOffsetT(8))
}
func (rcv *ColorRGB_i32) MutateB(n int32) bool {
	return rcv._tab.MutateInt32(rcv._tab.Pos+flatbuffers.UOffsetT(8), n)
}

func CreateColorRGB_i32(builder *flatbuffers.Builder, r int32, g int32, b int32) flatbuffers.UOffsetT {
	builder.Prep(4, 12)
	builder.PrependInt32(b)
	builder.PrependInt32(g)
	builder.PrependInt32(r)
	return builder.Offset()
}
