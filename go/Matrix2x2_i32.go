// automatically generated by the FlatBuffers compiler, do not modify

package flatmath

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

/// 2x2 matrix of ints
type Matrix2x2_i32 struct {
	_tab flatbuffers.Struct
}

func (rcv *Matrix2x2_i32) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *Matrix2x2_i32) Table() flatbuffers.Table {
	return rcv._tab.Table
}

func (rcv *Matrix2x2_i32) _0(obj *Vector2_i32) *Vector2_i32 {
	if obj == nil {
		obj = new(Vector2_i32)
	}
	obj.Init(rcv._tab.Bytes, rcv._tab.Pos+0)
	return obj
}
func (rcv *Matrix2x2_i32) _1(obj *Vector2_i32) *Vector2_i32 {
	if obj == nil {
		obj = new(Vector2_i32)
	}
	obj.Init(rcv._tab.Bytes, rcv._tab.Pos+8)
	return obj
}

func CreateMatrix2x2_i32(builder *flatbuffers.Builder, _0_x int32, _0_y int32, _1_x int32, _1_y int32) flatbuffers.UOffsetT {
	builder.Prep(4, 16)
	builder.Prep(4, 8)
	builder.PrependInt32(_1_y)
	builder.PrependInt32(_1_x)
	builder.Prep(4, 8)
	builder.PrependInt32(_0_y)
	builder.PrependInt32(_0_x)
	return builder.Offset()
}
