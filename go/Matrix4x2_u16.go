// automatically generated by the FlatBuffers compiler, do not modify

package flatmath

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

/// 4x2 matrix of ushorts
type Matrix4x2_u16 struct {
	_tab flatbuffers.Struct
}

func (rcv *Matrix4x2_u16) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *Matrix4x2_u16) Table() flatbuffers.Table {
	return rcv._tab.Table
}

func (rcv *Matrix4x2_u16) _0(obj *Vector2_u16) *Vector2_u16 {
	if obj == nil {
		obj = new(Vector2_u16)
	}
	obj.Init(rcv._tab.Bytes, rcv._tab.Pos+0)
	return obj
}
func (rcv *Matrix4x2_u16) _1(obj *Vector2_u16) *Vector2_u16 {
	if obj == nil {
		obj = new(Vector2_u16)
	}
	obj.Init(rcv._tab.Bytes, rcv._tab.Pos+4)
	return obj
}
func (rcv *Matrix4x2_u16) _2(obj *Vector2_u16) *Vector2_u16 {
	if obj == nil {
		obj = new(Vector2_u16)
	}
	obj.Init(rcv._tab.Bytes, rcv._tab.Pos+8)
	return obj
}
func (rcv *Matrix4x2_u16) _3(obj *Vector2_u16) *Vector2_u16 {
	if obj == nil {
		obj = new(Vector2_u16)
	}
	obj.Init(rcv._tab.Bytes, rcv._tab.Pos+12)
	return obj
}

func CreateMatrix4x2_u16(builder *flatbuffers.Builder, _0_x uint16, _0_y uint16, _1_x uint16, _1_y uint16, _2_x uint16, _2_y uint16, _3_x uint16, _3_y uint16) flatbuffers.UOffsetT {
	builder.Prep(2, 16)
	builder.Prep(2, 4)
	builder.PrependUint16(_3_y)
	builder.PrependUint16(_3_x)
	builder.Prep(2, 4)
	builder.PrependUint16(_2_y)
	builder.PrependUint16(_2_x)
	builder.Prep(2, 4)
	builder.PrependUint16(_1_y)
	builder.PrependUint16(_1_x)
	builder.Prep(2, 4)
	builder.PrependUint16(_0_y)
	builder.PrependUint16(_0_x)
	return builder.Offset()
}
