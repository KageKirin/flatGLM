// automatically generated by the FlatBuffers compiler, do not modify

package flatmath

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

/// 2x2 matrix of doubles
type Matrix2x2_f64 struct {
	_tab flatbuffers.Struct
}

func (rcv *Matrix2x2_f64) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *Matrix2x2_f64) Table() flatbuffers.Table {
	return rcv._tab.Table
}

func (rcv *Matrix2x2_f64) _0(obj *Vector2_f64) *Vector2_f64 {
	if obj == nil {
		obj = new(Vector2_f64)
	}
	obj.Init(rcv._tab.Bytes, rcv._tab.Pos+0)
	return obj
}
func (rcv *Matrix2x2_f64) _1(obj *Vector2_f64) *Vector2_f64 {
	if obj == nil {
		obj = new(Vector2_f64)
	}
	obj.Init(rcv._tab.Bytes, rcv._tab.Pos+16)
	return obj
}

func CreateMatrix2x2_f64(builder *flatbuffers.Builder, _0_x float64, _0_y float64, _1_x float64, _1_y float64) flatbuffers.UOffsetT {
	builder.Prep(8, 32)
	builder.Prep(8, 16)
	builder.PrependFloat64(_1_y)
	builder.PrependFloat64(_1_x)
	builder.Prep(8, 16)
	builder.PrependFloat64(_0_y)
	builder.PrependFloat64(_0_x)
	return builder.Offset()
}
